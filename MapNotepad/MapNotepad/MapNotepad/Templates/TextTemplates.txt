Templates:

Regions-------------------------------------------------------------------------------------------------------------------------------
   
   class ViewModel : BaseViewModel
    {
        public ViewModel (INavigationService navigationService):base(navigationService)
        {
        }

        #region --- Public Properties ---
        #endregion
        #region --- Overrides ---
        #endregion
        #region --- Private Helpers ---
        #endregion
    }

Property--------------------------------------------------------------------------------------------------------------------------------
 
 private <Type> _propName;
        public <Type> PropName
        {
            get => _propName;
            set => SetProperty(ref _propName, value);
        }

OnPropertyChanged---------------------------------------------------------------------------------------------------------------------------------
        
        protected override void OnPropertyChanged(string propertyName)
        {
            base.OnPropertyChanged(propertyName);

            switch (propertyName)
            {
                case nameof(PropName1): <Some logic> break;
                case nameof(PropName2): <Some logic> break;
                case nameof(PropName3): <Some logic> break;
                case nameof(PropName4): <Some logic> break;
                    
            }
        }

RaisePropertyChanged-----------------------------------------------------------------------------------------------------------------------------------

public <Type> TargetPropName => <Expression>;

private <Type> _propName;
        public <Type> PropName
        {
            get => _propName;
            set 
            { 
                SetProperty(ref _propName, value);
                RaisePropertyChanged(nameof(TargetPropName));
            }
        }


Styles--------------------------------------------------------------------------------------------------------------------

<Style x:Key="" TargetType="">
        <Setter Property="" Value="" />
    </Style>
--------------------------------------------------------------------------------------------------------------------------

<ListView xaml ------------------------------------------------------------------------------------------------------------
                    
                    Grid.Row="0"
                    BackgroundColor="Transparent"
                    IsVisible="{Binding ShowCurrentPinList}"
                    ItemsSource="{Binding ObserPinList}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <ViewCell.View>
                                    <StackLayout>
                                        <Label BackgroundColor="White" Text="{Binding Label}" />
                                    </StackLayout>
                                </ViewCell.View>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

side menu xaml -----------------------------------------------------------------------------------------------------------------

     <CollectionView x:Name="CollectionView">
        <CollectionView.ItemTemplate>
            <DataTemplate>
                <context:SideContextMenuView>
                    <context:SideContextMenuView.View>
                        <Label Text="Content"/>
                    </context:SideContextMenuView.View>
                    <context:SideContextMenuView.ContextTemplate>
                        <DataTemplate>
                            <Label Text="Context" />
                        </DataTemplate>
                    </context:SideContextMenuView.ContextTemplate>
                </context:SideContextMenuView>
            </DataTemplate>
        </CollectionView.ItemTemplate>
    </CollectionView>

-----------------------------------------------------------------------------------
                      

                <ListView
                    Grid.Row="1"
                    HasUnevenRows="True"
                    ItemsSource="{Binding PinList}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <ViewCell.View>
                                    <Label Text="{Binding Label}" />
                                </ViewCell.View>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>