<?xml version="1.0" encoding="utf-8" ?>
<Frame
    x:Class="MapNotepad.Controls.CustomEntry"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:Behaviors="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
    xmlns:local="clr-namespace:MapNotepad.Controls"
    x:Name="customEntry"
    BorderColor="#E5E5E5"
    CornerRadius="6">
    <StackLayout Orientation="Horizontal">
        <local:NoUnderlineEntry
            x:Name="entry"
            BackgroundColor="{Binding BackgroundColor, Source={x:Reference customEntry}}"
            FontFamily="{Binding FontFamily, Source={x:Reference customEntry}}"
            HorizontalOptions="FillAndExpand"
            IsPassword="{Binding IsPasswordHide, Source={x:Reference customEntry}}"
            MaxLength="{Binding MaxLength, Source={x:Reference customEntry}}"
            Placeholder="{Binding Placeholder, Source={x:Reference customEntry}}"
            PlaceholderColor="{Binding PlaceholderColor, Source={x:Reference customEntry}}"
            Text="{Binding Text, Source={x:Reference customEntry}}"
            TextColor="{Binding TextColor, Source={x:Reference customEntry}}">
            <local:NoUnderlineEntry.Behaviors>
                <Behaviors:EventToCommandBehavior Command="{Binding FocusedCommand, Source={x:Reference customEntry}}" EventName="Focused" />
                <Behaviors:EventToCommandBehavior Command="{Binding OnFocusedEventCommand, Source={x:Reference customEntry}}" EventName="Focused" />
                <Behaviors:EventToCommandBehavior Command="{Binding OnUnFocusedEventCommand, Source={x:Reference customEntry}}" EventName="Unfocused" />
                <Behaviors:EventToCommandBehavior Command="{Binding UnFocusedCommand, Source={x:Reference customEntry}}" EventName="Unfocused" />
            </local:NoUnderlineEntry.Behaviors>
        </local:NoUnderlineEntry>
        <ImageButton
            BackgroundColor="Transparent"
            Command="{Binding ButtonCommand, Source={x:Reference customEntry}}"
            HeightRequest="24"
            HorizontalOptions="End"
            IsVisible="False"
            Source="{Binding ImageSource, Source={x:Reference customEntry}}"
            WidthRequest="24">
            <ImageButton.Triggers>
                <DataTrigger
                    Binding="{Binding Source={x:Reference entry}, Path=Text.Length, Converter={StaticResource dataHasBeenEntered}}"
                    TargetType="ImageButton"
                    Value="true">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
            </ImageButton.Triggers>
        </ImageButton>
    </StackLayout>
</Frame>